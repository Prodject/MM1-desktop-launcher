//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DesktopLauncher.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.3.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("3")]
        public int HotKeyModifiers {
            get {
                return ((int)(this["HotKeyModifiers"]));
            }
            set {
                this["HotKeyModifiers"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("D0")]
        public string HotKeyCharacter {
            get {
                return ((string)(this["HotKeyCharacter"]));
            }
            set {
                this["HotKeyCharacter"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1, -1")]
        public global::System.Drawing.Point WindowPosition {
            get {
                return ((global::System.Drawing.Point)(this["WindowPosition"]));
            }
            set {
                this["WindowPosition"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>Search by Bing|http://www.bing.com/search?q={1}</string>
  <string>Search by Google|http://www.google.co.jp/search?q={1}</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection UriEntries {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["UriEntries"]));
            }
            set {
                this["UriEntries"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Specialized.StringCollection ExtraFolders {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["ExtraFolders"]));
            }
            set {
                this["ExtraFolders"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Dark")]
        public string Theme {
            get {
                return ((string)(this["Theme"]));
            }
            set {
                this["Theme"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" />")]
        public global::System.Collections.Specialized.StringCollection Aliases {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["Aliases"]));
            }
            set {
                this["Aliases"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool LaunchAtLogin {
            get {
                return ((bool)(this["LaunchAtLogin"]));
            }
            set {
                this["LaunchAtLogin"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.9")]
        public decimal Opacity {
            get {
                return ((decimal)(this["Opacity"]));
            }
            set {
                this["Opacity"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Specialized.StringCollection LaunchCounts {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["LaunchCounts"]));
            }
            set {
                this["LaunchCounts"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsUpgraded {
            get {
                return ((bool)(this["IsUpgraded"]));
            }
            set {
                this["IsUpgraded"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" />")]
        public global::System.Collections.Specialized.StringCollection ExtraExtentions {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["ExtraExtentions"]));
            }
            set {
                this["ExtraExtentions"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <s" +
            "tring>A</string>\r\n  <string>B</string>\r\n  <string>C</string>\r\n  <string>CapsLock" +
            "</string>\r\n  <string>D</string>\r\n  <string>0</string>\r\n  <string>1</string>\r\n  <" +
            "string>2</string>\r\n  <string>3</string>\r\n  <string>4</string>\r\n  <string>5</stri" +
            "ng>\r\n  <string>6</string>\r\n  <string>7</string>\r\n  <string>8</string>\r\n  <string" +
            ">9</string>\r\n  <string>Delete</string>\r\n  <string>Down</string>\r\n  <string>E</st" +
            "ring>\r\n  <string>End</string>\r\n  <string>F</string>\r\n  <string>F1</string>\r\n  <s" +
            "tring>F10</string>\r\n  <string>F11</string>\r\n  <string>F12</string>\r\n  <string>F1" +
            "3</string>\r\n  <string>F14</string>\r\n  <string>F15</string>\r\n  <string>F2</string" +
            ">\r\n  <string>F3</string>\r\n  <string>F4</string>\r\n  <string>F5</string>\r\n  <strin" +
            "g>F6</string>\r\n  <string>F7</string>\r\n  <string>F8</string>\r\n  <string>F9</strin" +
            "g>\r\n  <string>G</string>\r\n  <string>H</string>\r\n  <string>Home</string>\r\n  <stri" +
            "ng>I</string>\r\n  <string>Insert</string>\r\n  <string>J</string>\r\n  <string>K</str" +
            "ing>\r\n  <string>L</string>\r\n  <string>Left</string>\r\n  <string>M</string>\r\n  <st" +
            "ring>N</string>\r\n  <string>NumLock</string>\r\n  <string>O</string>\r\n  <string>;</" +
            "string>\r\n  <string>/</string>\r\n  <string>[</string>\r\n  <string>]</string>\r\n  <st" +
            "ring>\\</string>\r\n  <string>,</string>\r\n  <string>=</string>\r\n  <string>-</string" +
            ">\r\n  <string>.</string>\r\n  <string>`</string>\r\n  <string>P</string>\r\n  <string>P" +
            "ageDown</string>\r\n  <string>PageUp</string>\r\n  <string>Pause</string>\r\n  <string" +
            ">Print</string>\r\n  <string>Q</string>\r\n  <string>R</string>\r\n  <string>Right</st" +
            "ring>\r\n  <string>S</string>\r\n  <string>Scroll</string>\r\n  <string>T</string>\r\n  " +
            "<string>U</string>\r\n  <string>Up</string>\r\n  <string>V</string>\r\n  <string>W</st" +
            "ring>\r\n  <string>X</string>\r\n  <string>Y</string>\r\n  <string>Z</string>\r\n  <stri" +
            "ng>\'</string>\r\n  <string>Tab</string>\r\n  <string>Space</string>\r\n  <string>Backs" +
            "pace</string>\r\n  <string>Escape</string>\r\n  <string>Enter</string>\r\n  <string>Re" +
            "turn</string>\r\n</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection HotKeys {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["HotKeys"]));
            }
        }
    }
}
